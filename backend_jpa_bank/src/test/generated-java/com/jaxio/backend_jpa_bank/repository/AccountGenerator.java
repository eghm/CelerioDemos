/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/test/java/service/ModelGenerator.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package com.jaxio.backend_jpa_bank.repository;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

import com.jaxio.backend_jpa_bank.domain.Account;
import com.jaxio.backend_jpa_bank.domain.Currency;
import com.jaxio.backend_jpa_bank.domain.Customer;
import com.jaxio.backend_jpa_bank.util.ValueGenerator;

/**
 * Helper class to create transient entities instance for testing purposes.
 * Simple properties are pre-filled with random values.
 */
@Named
@Singleton
public class AccountGenerator {

    /**
     * Returns a new Account instance filled with random values.
     */
    public Account getAccount() {
        Account account = new Account();

        // simple attributes follows
        account.setAccountNumber(ValueGenerator.getUniqueString(100));
        account.setName("a");
        // mandatory relation
        Currency currency = currencyGenerator.getCurrency();
        currencyRepository.save(currency);
        account.setCurrency(currency);
        // mandatory relation
        Customer customer = customerGenerator.getCustomer();
        customerRepository.save(customer);
        account.setCustomer(customer);
        return account;
    }

    @Inject
    private CurrencyRepository currencyRepository;
    @Inject
    private CurrencyGenerator currencyGenerator;
    @Inject
    private CustomerRepository customerRepository;
    @Inject
    private CustomerGenerator customerGenerator;
}