/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-javaee7-backend:src/main/java/context/UserContext.p.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package com.jaxio.javaee7_wildfly_bank.context;

import java.util.Locale;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;

import com.jaxio.jpa.querybyexample.LocaleHolder;

/**
 * Get Spring security context to access user data security infos
 */
public class UserContext {
    public static final String ANONYMOUS_USER = "anonymousUser";

    /**
     * Get the current username. Note that it may not correspond to a username that
     * currently exists in your account repository; it could be a spring security
     * 'anonymous user'.
     * 
     * @return the current user's username, or 'anonymousUser'.
     */
    public static String getUsername() {
        Subject subject = SecurityUtils.getSubject();
        if (subject != null) {
            Object principal = subject.getPrincipal();

            if (principal != null && principal instanceof UserWithId) {
                return ((UserWithId) principal).getUsername();
            } else if (principal != null) {
                return principal.toString();
            }
        }
        return ANONYMOUS_USER;
    }

    public static Integer getId() {
        Subject subject = SecurityUtils.getSubject();
        if (subject != null) {
            Object principal = subject.getPrincipal();

            if (principal != null && principal instanceof UserWithId) {
                return ((UserWithId) principal).getId();
            }
        }

        return null;
    }

    /**
     * return the current locale
     */
    public static Locale getLocale() {
        return LocaleHolder.getLocale();
    }

    /**
     * Tell whether the passed role is set?
     * 
     * @return true if the passed role is present, false otherwise.
     */
    public static boolean hasRole(String roleName) {
        return SecurityUtils.getSubject().hasRole(roleName);
    }
}