/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-javaee7-backend:src/main/java/printer/support/TypeAwarePrinter.p.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package com.jaxio.javaee7_wildfly_bank.printer.support;

import static com.google.common.collect.Maps.newHashMap;

import java.util.Locale;
import java.util.Map;

import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.inject.Instance;
import javax.inject.Inject;
import javax.inject.Named;

import com.jaxio.jpa.querybyexample.Identifiable;
import com.jaxio.jpa.querybyexample.LocaleHolder;

/**
 * Given the type of the object use the corresponding {@link GenericPrinter}, or use {@link #toString()} method.
 */
@ApplicationScoped
@Named("printer")
public class TypeAwarePrinter {
    private Map<String, GenericPrinter<?>> printers = newHashMap();

    @Inject
    void buildCache(Instance<GenericPrinter<?>> registredPrinters) {
        for (GenericPrinter<?> printer : registredPrinters) {
            printers.put(printer.getTarget().getSimpleName(), printer);
        }
    }

    public String print(Object object) {
        return print(object, LocaleHolder.getLocale());
    }

    @SuppressWarnings("unchecked")
    public String print(Object object, Locale locale) {
        if (object == null) {
            return "";
        }

        @SuppressWarnings("rawtypes")
        GenericPrinter printer = printers.get(((Identifiable) object).entityClassName());
        return printer == null ? object.toString() : printer.print(object, locale);
    }
}