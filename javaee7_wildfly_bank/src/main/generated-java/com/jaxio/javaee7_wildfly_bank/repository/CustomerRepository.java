/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-javaee7-backend:src/main/java/repository/Repository.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package com.jaxio.javaee7_wildfly_bank.repository;

import javax.enterprise.context.ApplicationScoped;
import javax.inject.Named;

import org.hibernate.LazyInitializationException;

import com.jaxio.javaee7_wildfly_bank.domain.Customer;
import com.jaxio.jpa.querybyexample.GenericRepository;

/**
 * {@link GenericRepository} for {@link Customer} 
 */
@ApplicationScoped
@Named
public class CustomerRepository extends GenericRepository<Customer, Integer> {

    public CustomerRepository() {
        super(Customer.class, Integer::valueOf);
    }

    @Override
    public Customer getNew() {
        return new Customer();
    }

    @Override
    public Customer getNewWithDefaults() {
        return getNew().withDefaults();
    }

    /**
     * Safe way to load the contractBinary content. 
     */
    public byte[] getContractBinary(Customer customer) {
        if (!customer.isIdSet()) {
            return customer.getContractBinary();
        }

        try {
            return customer.getContractBinary();
        } catch (LazyInitializationException lie) { // _HACK_ as we still rely on hibernate here
            return get(customer).getContractBinary();
        }
    }
}