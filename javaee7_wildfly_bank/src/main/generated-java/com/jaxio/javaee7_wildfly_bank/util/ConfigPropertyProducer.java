/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-javaee7-backend:src/main/java/util/ConfigPropertyProducer.p.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package com.jaxio.javaee7_wildfly_bank.util;

import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.inject.Produces;
import javax.enterprise.inject.spi.InjectionPoint;
import javax.inject.Inject;

import org.apache.deltaspike.core.util.BeanUtils;

@ApplicationScoped
public class ConfigPropertyProducer {

    @Inject
    private ResourcesUtil resourceUtil;

    @Produces
    @IntConfig(name = "notused")
    public int intPropertyProducer(InjectionPoint injectionPoint) {
        IntConfig intConfig = BeanUtils.extractAnnotation(injectionPoint.getAnnotated(), IntConfig.class);

        String value = resourceUtil.getProperty(intConfig.name());

        if (value != null && !value.isEmpty()) {
            return Integer.parseInt(value);
        } else if (intConfig.required()) {
            throw new IllegalStateException("Could not find any value for key " + intConfig.name());
        } else {
            return intConfig.defaultValue();
        }
    }
}