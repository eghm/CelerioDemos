/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-javaee7-frontend:src/main/java/services/LocaleService.p.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package com.jaxio.javaee7_wildfly_bank.web.service;

import static java.util.Locale.ENGLISH;
import static java.util.Locale.FRENCH;

import java.io.Serializable;
import java.util.Locale;

import javax.enterprise.context.SessionScoped;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.jaxio.javaee7_wildfly_bank.web.filter.LocaleResolver;
import com.jaxio.jpa.querybyexample.LocaleHolder;

@Named
@SessionScoped
public class LocaleService implements Serializable {
    static final private long serialVersionUID = 1L;

    @Inject
    private LocaleResolver localeResolver;

    public String getLocale() {
        return LocaleHolder.getLocale().toString();
    }

    public String getLanguage() {
        return LocaleHolder.getLocale().getLanguage();
    }

    public String switchToFrench() {
        return switchToLocale(FRENCH);
    }

    public String switchToEnglish() {
        return switchToLocale(ENGLISH);
    }

    private String switchToLocale(Locale locale) {
        updateJsfLocale(locale);
        updateResolverLocale(locale);
        return redirectToSelf();
    }

    private String redirectToSelf() {
        String viewId = FacesContext.getCurrentInstance().getViewRoot().getViewId();
        return viewId + "?faces-redirect=true";
    }

    private void updateJsfLocale(Locale locale) {
        FacesContext.getCurrentInstance().getViewRoot().setLocale(locale);
    }

    private void updateResolverLocale(Locale locale) {
        ExternalContext externalContext = FacesContext.getCurrentInstance().getExternalContext();
        localeResolver.setLocale((HttpServletRequest) externalContext.getRequest(), (HttpServletResponse) externalContext.getResponse(), locale);
        LocaleHolder.setLocale(locale);
    }

    public boolean isFrench() {
        // check 'fr_FR' or simply 'fr'
        return FRENCH.equals(LocaleHolder.getLocale()) || FRENCH.getLanguage().equals(getLanguage());
    }
}
