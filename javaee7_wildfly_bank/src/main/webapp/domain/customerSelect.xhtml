<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-javaee7-frontend:src/main/webapp/domain/select.e.vm.xhtml
 ! Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:app="http://jaxio.com/app"
	xmlns:appcc="http://xmlns.jcp.org/jsf/composite/components">
	<ui:param name="readonly" value="#{'true'.equals(param['readonly'])}" />			
	<app:search title="customer_search" model="#{customerLazyDataModel}" searchForm="#{customerSearchForm}"
		controller="#{customerController}" permission="#{customerPermission}" savedSearch="true">
		<ui:define name="filters">
			<app:inputMultiAutoComplete id="companyName" value="#{customerSearchForm.companyNameSelector}" label="customer_companyName" completeMethod="completeProperty" property="companyName" />
			<app:multiAutoComplete id="addressSelector" value="#{customerSearchForm.addressSelector}" label="customer_address" 
				controller="#{addressController}" permission="#{addressPermission}"/>
		</ui:define>
		<ui:define name="result">
			<c:if test="#{not multiCheckboxSelection}">
				<p:ajax event="rowSelect" listener="#{customerLazyDataModel.onRowSelect}" />
			</c:if>
			<p:column id="customer_companyName" headerText="#{msg.customer_companyName}" sortBy="#{item.companyName}" styleClass="companyName">
				<h:outputText value="#{item.companyName}" />
			</p:column>
			<p:column id="customer_contractFileName" headerText="#{msg.customer_contractFileName}" sortBy="#{item.contractFileName}" styleClass="contractFileName">
				<app:outputFile filename="#{item.contractFileName}" stream="#{customerFileDownload.getContractBinaryStream(item)}"/>
			</p:column>
			<p:column id="actions" headerText="#{msg.actions}" styleClass="actions-column" resizable="false">
				<app:iconEdit item="#{item}" />
				<app:iconView item="#{item}" />
				<app:iconDelete item="#{item}"/>
			</p:column>
		</ui:define>
	</app:search>
</ui:composition>