/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/main/java/repository/Repository.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package com.jaxio.jsf2_spring_conversation_bank.repository;

import javax.inject.Named;
import javax.inject.Singleton;

import org.hibernate.LazyInitializationException;
import org.springframework.transaction.annotation.Transactional;

import com.jaxio.jpa.querybyexample.GenericRepository;
import com.jaxio.jsf2_spring_conversation_bank.domain.SavedSearch;

/**
 * {@link GenericRepository} for {@link SavedSearch} 
 */
@Named
@Singleton
public class SavedSearchRepository extends GenericRepository<SavedSearch, Integer> {

    public SavedSearchRepository() {
        super(SavedSearch.class);
    }

    @Override
    public SavedSearch getNew() {
        return new SavedSearch();
    }

    @Override
    public SavedSearch getNewWithDefaults() {
        return getNew().withDefaults();
    }

    /**
     * Safe way to load the formContent content. 
     */
    @Transactional(readOnly = true)
    public byte[] getFormContent(SavedSearch savedSearch) {
        if (!savedSearch.isIdSet()) {
            return savedSearch.getFormContent();
        }

        try {
            return savedSearch.getFormContent();
        } catch (LazyInitializationException lie) { // _HACK_ as we still rely on hibernate here
            return get(savedSearch).getFormContent();
        }
    }
}