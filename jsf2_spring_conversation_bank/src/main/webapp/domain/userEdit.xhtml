<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-jsf2-spring-conversation:src/main/webapp/domain/edit.e.vm.xhtml
 ! Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:app="http://jaxio.com/app"
	xmlns:appcc="http://xmlns.jcp.org/jsf/composite/components">
<app:edit bean="#{userEditForm}" title="#{userEditForm.title}">
	<ui:define name="form">
		<app:input id="username" value="#{userEditForm.user.username}" size="100" label="user_username" required="true">
			<f:validateBean binding="#{jpaUniqueValidator}" entity="#{userEditForm.user}" property="username" />
		</app:input>
		<app:inputPassword id="password" value="#{userEditForm.user.password}" size="100" label="user_password" required="true" />
		<app:input id="email" value="#{userEditForm.user.email}" size="100" label="user_email" />
		<app:inputBoolean id="isEnabled" value="#{userEditForm.user.isEnabled}" label="user_isEnabled" required="true" />
		<app:selectOneRadio id="civility" value="#{userEditForm.user.civility}" values="#{civilityItems.list}" label="user_civility" />
		<app:input id="firstName" value="#{userEditForm.user.firstName}" size="100" label="user_firstName" />
		<app:input id="lastName" value="#{userEditForm.user.lastName}" size="100" label="user_lastName" />
		<app:audit
			creationAuthor="#{userEditForm.user.creationAuthor}"
			creationDate="#{userEditForm.user.creationDate}"
			lastModificationAuthor="#{userEditForm.user.lastModificationAuthor}"
			lastModificationDate="#{userEditForm.user.lastModificationDate}"
		/>
	</ui:define>
	<ui:define name="tabs">
			<p:tab id="securityRoles" title="#{msg.user_securityRoles}" rendered="#{rolePermission.canUse() and not (print and userEditForm.user.securityRoles.isEmpty())}">
				<p:dataTable id="securityRolesList" var="item" value="#{userEditForm.securityRoles.model}"
					paginator="#{not print and userEditForm.user.securityRoles.size() gt 10}" rows="#{print ? null : 10}"
					rowsPerPageTemplate="10,25,50,100" paginatorPosition="bottom"
					selection="#{userEditForm.securityRoles.model.selectedRow}" selectionMode="single" emptyMessage="#{msg.collection_empty}">
					<p:ajax event="rowSelect" listener="#{userEditForm.securityRoles.onRowSelect}" />
					<p:column id="role_roleName" headerText="#{msg.role_roleName}" sortBy="#{item.roleName}" styleClass="roleName">
						#{item.roleName}
					</p:column>
					<p:column id="actions" styleClass="actions-column" resizable="false">
						<f:facet name="header">
							<app:iconSearch id="selectSecurityRole" model="#{userEditForm.securityRoles}" title="user_securityRoles" permission="#{rolePermission}" />
							<app:iconAdd id="addSecurityRole" model="#{userEditForm.securityRoles}" title="user_securityRoles" permission="#{rolePermission}"/>
						</f:facet>
						<app:iconView model="#{userEditForm.securityRoles}" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{userEditForm.securityRoles.model.selectedRow}" />
						</app:iconView>
						<app:iconEdit model="#{userEditForm.securityRoles}" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{userEditForm.securityRoles.model.selectedRow}" />
						</app:iconEdit>
						<app:iconRemove dialogWidgetVar="askForRemoveSecurityRoleDialog" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{userEditForm.securityRoles.model.selectedRow}" />
						</app:iconRemove>
					</p:column>
				</p:dataTable>
			</p:tab>
	</ui:define>
	<ui:define name="custom-dialogs">
		<app:confirmToManyRemoveDialog widgetVar="askForRemoveSecurityRoleDialog" toManyAction="#{userEditForm.securityRoles}" update=":form:tabs:securityRolesList :form:messages" />
	</ui:define>
</app:edit>
</ui:composition>
