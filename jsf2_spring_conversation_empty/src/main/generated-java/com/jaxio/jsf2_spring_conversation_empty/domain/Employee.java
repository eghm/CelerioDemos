/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package com.jaxio.jsf2_spring_conversation_empty.domain;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import com.jaxio.jpa.querybyexample.Identifiable;

@Entity
@Table(name = "employee")
public class Employee implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Employee.class);

    // Raw attributes
    private Integer id;
    private String empuhnumber;
    private String empfirstname;
    private String emplastname;
    private String emprole;
    private String empdivision;
    private String empstatus;

    // -- [id] ------------------------

    @Override
    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "empid", precision = 10)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Employee id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [empuhnumber] ------------------------

    @NotEmpty
    @Size(max = 8)
    @Column(name = "empuhnumber", nullable = false, length = 8)
    public String getEmpuhnumber() {
        return empuhnumber;
    }

    public void setEmpuhnumber(String empuhnumber) {
        this.empuhnumber = empuhnumber;
    }

    public Employee empuhnumber(String empuhnumber) {
        setEmpuhnumber(empuhnumber);
        return this;
    }

    // -- [empfirstname] ------------------------

    @NotEmpty
    @Size(max = 40)
    @Column(name = "empfirstname", nullable = false, length = 40)
    public String getEmpfirstname() {
        return empfirstname;
    }

    public void setEmpfirstname(String empfirstname) {
        this.empfirstname = empfirstname;
    }

    public Employee empfirstname(String empfirstname) {
        setEmpfirstname(empfirstname);
        return this;
    }

    // -- [emplastname] ------------------------

    @NotEmpty
    @Size(max = 40)
    @Column(name = "emplastname", nullable = false, length = 40)
    public String getEmplastname() {
        return emplastname;
    }

    public void setEmplastname(String emplastname) {
        this.emplastname = emplastname;
    }

    public Employee emplastname(String emplastname) {
        setEmplastname(emplastname);
        return this;
    }

    // -- [emprole] ------------------------

    @NotEmpty
    @Size(max = 1)
    @Column(name = "emprole", nullable = false, length = 1)
    public String getEmprole() {
        return emprole;
    }

    public void setEmprole(String emprole) {
        this.emprole = emprole;
    }

    public Employee emprole(String emprole) {
        setEmprole(emprole);
        return this;
    }

    // -- [empdivision] ------------------------

    @NotEmpty
    @Size(max = 150)
    @Column(name = "empdivision", nullable = false, length = 150)
    public String getEmpdivision() {
        return empdivision;
    }

    public void setEmpdivision(String empdivision) {
        this.empdivision = empdivision;
    }

    public Employee empdivision(String empdivision) {
        setEmpdivision(empdivision);
        return this;
    }

    // -- [empstatus] ------------------------

    @NotEmpty
    @Size(max = 1)
    @Column(name = "empstatus", nullable = false, length = 1)
    public String getEmpstatus() {
        return empstatus;
    }

    public void setEmpstatus(String empstatus) {
        this.empstatus = empstatus;
    }

    public Employee empstatus(String empstatus) {
        setEmpstatus(empstatus);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Employee withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Employee && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Employee instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("empuhnumber", getEmpuhnumber()) //
                .add("empfirstname", getEmpfirstname()) //
                .add("emplastname", getEmplastname()) //
                .add("emprole", getEmprole()) //
                .add("empdivision", getEmpdivision()) //
                .add("empstatus", getEmpstatus()) //
                .toString();
    }
}