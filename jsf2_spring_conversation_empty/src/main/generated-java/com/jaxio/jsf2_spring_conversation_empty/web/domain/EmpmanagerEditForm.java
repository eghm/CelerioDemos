/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package com.jaxio.jsf2_spring_conversation_empty.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import com.jaxio.jsf2_spring_conversation_empty.domain.Employee;
import com.jaxio.jsf2_spring_conversation_empty.domain.Empmanager;
import com.jaxio.jsf2_spring_conversation_empty.domain.Empmanager_;
import com.jaxio.jsf2_spring_conversation_empty.repository.EmpmanagerRepository;
import com.jaxio.jsf2_spring_conversation_empty.web.domain.support.GenericEditForm;
import com.jaxio.jsf2_spring_conversation_empty.web.domain.support.GenericToOneAssociation;
import com.jaxio.jsf2_spring_conversation_empty.web.faces.ConversationContextScoped;

/**
 * View Helper/Controller to edit {@link Empmanager}.
 */
@Named
@ConversationContextScoped
public class EmpmanagerEditForm extends GenericEditForm<Empmanager, Integer> {
    @Inject
    protected EmpmanagerController empmanagerController;
    @Inject
    protected EmployeeController employeeController;
    protected GenericToOneAssociation<Employee, Integer> employee;

    @Inject
    public EmpmanagerEditForm(EmpmanagerRepository empmanagerRepository, EmpmanagerGraphLoader empmanagerGraphLoader) {
        super(empmanagerRepository, empmanagerGraphLoader);
    }

    /**
     * The entity to edit/view.
     */
    public Empmanager getEmpmanager() {
        return getEntity();
    }

    public String print() {
        return empmanagerController.print(getEmpmanager());
    }

    @PostConstruct
    void setupEmployeeActions() {
        employee = new GenericToOneAssociation<Employee, Integer>(employeeController, Empmanager_.employee) {
            @Override
            protected Employee get() {
                return getEmpmanager().getEmployee();
            }

            @Override
            protected void set(Employee employee) {
                getEmpmanager().setEmployee(employee);
            }

            @NotNull
            @Override
            public Employee getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<Employee, Integer> getEmployee() {
        return employee;
    }
}
